<?xml version="1.0" encoding="UTF-8"?>
<sequence name="DSSTest_PassThrough_IN_SEQ" trace="disable" xmlns="http://ws.apache.org/ns/synapse">

    <call-template description="Logging" target="conf:templates/sequences/shared/Logging.xml">
        <with-param name="msg_status" value="Request Received"/>
        <with-param name="transaction_id" value="{$ctx:TRANSACTION_ID}"/>
        <with-param name="service_id" value="DSSTest"/>
        <with-param name="operation_name" value="{$ctx:OPERATION_NAME}"/>
        <with-param name="msg_direction" value="Incoming"/>
        <with-param name="debug_ref" value="Request Received"/>
        <with-param name="error_detail" value="-NA-"/>
        <with-param name="sequence_name" value="DSSTest_PassThrough_IN_SEQ"/>
    </call-template>
    <property action="remove" name="Accept" scope="transport"/>
    <property name="ContentType" value="application/xml" scope="axis2"/>
    
    <switch source="$ctx:OPERATION_NAME">
        <case regex="getPeople">
            <header name="Action" scope="default" value="urn:getPeople"/>
            <send>
                <endpoint key="conf:/endpoints/DSSTest/DSSTest_Test_EP.xml"/>
            </send>
        </case>

        <case regex="getCars">
            <header name="Action" scope="default" value="urn:getCars"/>
            <send>
                <endpoint key="conf:/endpoints/DSSTest/DSSTest_Test_EP.xml"/>
            </send>
        </case>

        <case regex="getPersonByID">
            <header name="Action" scope="default" value="urn:getPersonByID"/>
            <property name="id" scope="default" expression="$ctx:uri.var.id"/>
            <payloadFactory media-type="xml">
						<format>
							<dat:getPersonByID xmlns:dat="http://ws.wso2.org/dataservice">
								<dat:id>$1</dat:id>
							</dat:getPersonByID>
						</format>
						<args>
							<arg evaluator="xml" expression="$ctx:id"/>
						</args>
					</payloadFactory>

            <send>
                <endpoint key="conf:/endpoints/DSSTest/DSSTest_Test_EP.xml"/>
            </send>
        </case>

        <case regex="getPeoplesCars">
            <header name="Action" scope="default" value="urn:getPeoplesCars"/>
            <send>
                <endpoint key="conf:/endpoints/DSSTest/DSSTest_Test_EP.xml"/>
            </send>
        </case>

        <case regex="getPersonCars">
            <header name="Action" scope="default" value="urn:getPersonCars"/>
            <property name="id" scope="default" expression="$ctx:uri.var.id"/>
            <payloadFactory media-type="xml">
						<format>
							<dat:getPersonCars xmlns:dat="http://ws.wso2.org/dataservice">
								<dat:id>$1</dat:id>
							</dat:getPersonCars>
						</format>
						<args>
							<arg evaluator="xml" expression="$ctx:id"/>
						</args>
					</payloadFactory>

            <send>
                <endpoint key="conf:/endpoints/DSSTest/DSSTest_Test_EP.xml"/>
            </send>
        </case>

        <case regex="newPerson">
            <header name="Action" scope="default" value="urn:newPerson"/>
            <property name="id" scope="default" expression="json-eval($.id)"/>
            <property name="name" scope="default" expression="json-eval($.name)"/>
            <property name="age" scope="default" expression="json-eval($.age)"/>
            <property name="nationality" scope="default" expression="json-eval($.nationality)"/>
            
            <payloadFactory media-type="xml">
				<format>
					<dat:newPerson xmlns:dat="http://ws.wso2.org/dataservice">
						<dat:id>$1</dat:id>
						<dat:name>$2</dat:name>
						<dat:age>$3</dat:age>
						<dat:nationality>$4</dat:nationality>
					</dat:newPerson>
				</format>
				<args>
					<arg evaluator="xml" expression="$ctx:id"/>
					<arg evaluator="xml" expression="$ctx:name"/>
					<arg evaluator="xml" expression="$ctx:age"/>
					<arg evaluator="xml" expression="$ctx:nationality"/>
				</args>
			</payloadFactory> 

            <send>
                <endpoint key="conf:/endpoints/DSSTest/DSSTest_Test_EP.xml"/>
            </send> 
        </case>
    </switch>
</sequence>
